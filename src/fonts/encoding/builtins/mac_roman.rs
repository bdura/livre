use crate::fonts::encoding::{CharacterSet, Decode, Glyph};

/// Mac OS standard encoding for Latin text.
///
/// > Mac OS standard encoding for Latin text in Western writing systems.
/// > PDF processors shall have a predefined encoding named MacRomanEncoding
/// > that may be used with both Type 1 and TrueType fonts.
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub struct MacRomanEncoding;

impl Decode for MacRomanEncoding {
    fn decode(&self, code: u8) -> u16 {
        MAC_ROMAN_ENCODING[code as usize].expect("character should be in the character set.")
    }

    fn character_set(self) -> Vec<Option<u16>> {
        MAC_ROMAN_ENCODING.to_vec()
    }
}

pub const MAC_ROMAN_ENCODING: CharacterSet = [
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    Some(Glyph::space),
    Some(Glyph::exclam),
    Some(Glyph::quotedbl),
    Some(Glyph::numbersign),
    Some(Glyph::dollar),
    Some(Glyph::percent),
    Some(Glyph::ampersand),
    Some(Glyph::quotesingle),
    Some(Glyph::parenleft),
    Some(Glyph::parenright),
    Some(Glyph::asterisk),
    Some(Glyph::plus),
    Some(Glyph::comma),
    Some(Glyph::hyphen),
    Some(Glyph::period),
    Some(Glyph::slash),
    Some(Glyph::zero),
    Some(Glyph::one),
    Some(Glyph::two),
    Some(Glyph::three),
    Some(Glyph::four),
    Some(Glyph::five),
    Some(Glyph::six),
    Some(Glyph::seven),
    Some(Glyph::eight),
    Some(Glyph::nine),
    Some(Glyph::colon),
    Some(Glyph::semicolon),
    Some(Glyph::less),
    Some(Glyph::equal),
    Some(Glyph::greater),
    Some(Glyph::question),
    Some(Glyph::at),
    Some(Glyph::A),
    Some(Glyph::B),
    Some(Glyph::C),
    Some(Glyph::D),
    Some(Glyph::E),
    Some(Glyph::F),
    Some(Glyph::G),
    Some(Glyph::H),
    Some(Glyph::I),
    Some(Glyph::J),
    Some(Glyph::K),
    Some(Glyph::L),
    Some(Glyph::M),
    Some(Glyph::N),
    Some(Glyph::O),
    Some(Glyph::P),
    Some(Glyph::Q),
    Some(Glyph::R),
    Some(Glyph::S),
    Some(Glyph::T),
    Some(Glyph::U),
    Some(Glyph::V),
    Some(Glyph::W),
    Some(Glyph::X),
    Some(Glyph::Y),
    Some(Glyph::Z),
    Some(Glyph::bracketleft),
    Some(Glyph::backslash),
    Some(Glyph::bracketright),
    Some(Glyph::asciicircum),
    Some(Glyph::underscore),
    Some(Glyph::grave),
    Some(Glyph::a),
    Some(Glyph::b),
    Some(Glyph::c),
    Some(Glyph::d),
    Some(Glyph::e),
    Some(Glyph::f),
    Some(Glyph::g),
    Some(Glyph::h),
    Some(Glyph::i),
    Some(Glyph::j),
    Some(Glyph::k),
    Some(Glyph::l),
    Some(Glyph::m),
    Some(Glyph::n),
    Some(Glyph::o),
    Some(Glyph::p),
    Some(Glyph::q),
    Some(Glyph::r),
    Some(Glyph::s),
    Some(Glyph::t),
    Some(Glyph::u),
    Some(Glyph::v),
    Some(Glyph::w),
    Some(Glyph::x),
    Some(Glyph::y),
    Some(Glyph::z),
    Some(Glyph::braceleft),
    Some(Glyph::bar),
    Some(Glyph::braceright),
    Some(Glyph::asciitilde),
    None,
    Some(Glyph::Adieresis),
    Some(Glyph::Aring),
    Some(Glyph::Ccedilla),
    Some(Glyph::Eacute),
    Some(Glyph::Ntilde),
    Some(Glyph::Odieresis),
    Some(Glyph::Udieresis),
    Some(Glyph::aacute),
    Some(Glyph::agrave),
    Some(Glyph::acircumflex),
    Some(Glyph::adieresis),
    Some(Glyph::atilde),
    Some(Glyph::aring),
    Some(Glyph::ccedilla),
    Some(Glyph::eacute),
    Some(Glyph::egrave),
    Some(Glyph::ecircumflex),
    Some(Glyph::edieresis),
    Some(Glyph::iacute),
    Some(Glyph::igrave),
    Some(Glyph::icircumflex),
    Some(Glyph::idieresis),
    Some(Glyph::ntilde),
    Some(Glyph::oacute),
    Some(Glyph::ograve),
    Some(Glyph::ocircumflex),
    Some(Glyph::odieresis),
    Some(Glyph::otilde),
    Some(Glyph::uacute),
    Some(Glyph::ugrave),
    Some(Glyph::ucircumflex),
    Some(Glyph::udieresis),
    Some(Glyph::dagger),
    Some(Glyph::degree),
    Some(Glyph::cent),
    Some(Glyph::sterling),
    Some(Glyph::section),
    Some(Glyph::bullet),
    Some(Glyph::paragraph),
    Some(Glyph::germandbls),
    Some(Glyph::registered),
    Some(Glyph::copyright),
    Some(Glyph::trademark),
    Some(Glyph::acute),
    Some(Glyph::dieresis),
    Some(Glyph::notequal),
    Some(Glyph::AE),
    Some(Glyph::Oslash),
    Some(Glyph::infinity),
    Some(Glyph::plusminus),
    Some(Glyph::lessequal),
    Some(Glyph::greaterequal),
    Some(Glyph::yen),
    Some(Glyph::mu),
    Some(Glyph::partialdiff),
    Some(Glyph::summation),
    Some(Glyph::product),
    Some(Glyph::pi),
    Some(Glyph::integral),
    Some(Glyph::ordfeminine),
    Some(Glyph::ordmasculine),
    Some(Glyph::Omega),
    Some(Glyph::ae),
    Some(Glyph::oslash),
    Some(Glyph::questiondown),
    Some(Glyph::exclamdown),
    Some(Glyph::logicalnot),
    Some(Glyph::radical),
    Some(Glyph::florin),
    Some(Glyph::approxequal),
    Some(Glyph::Delta),
    Some(Glyph::guillemotleft),
    Some(Glyph::guillemotright),
    Some(Glyph::ellipsis),
    Some(Glyph::space),
    Some(Glyph::Agrave),
    Some(Glyph::Atilde),
    Some(Glyph::Otilde),
    Some(Glyph::OE),
    Some(Glyph::oe),
    Some(Glyph::endash),
    Some(Glyph::emdash),
    Some(Glyph::quotedblleft),
    Some(Glyph::quotedblright),
    Some(Glyph::quoteleft),
    Some(Glyph::quoteright),
    Some(Glyph::divide),
    Some(Glyph::lozenge),
    Some(Glyph::ydieresis),
    Some(Glyph::Ydieresis),
    Some(Glyph::fraction),
    Some(Glyph::currency),
    Some(Glyph::guilsinglleft),
    Some(Glyph::guilsinglright),
    Some(Glyph::fi),
    Some(Glyph::fl),
    Some(Glyph::daggerdbl),
    Some(Glyph::periodcentered),
    Some(Glyph::quotesinglbase),
    Some(Glyph::quotedblbase),
    Some(Glyph::perthousand),
    Some(Glyph::Acircumflex),
    Some(Glyph::Ecircumflex),
    Some(Glyph::Aacute),
    Some(Glyph::Edieresis),
    Some(Glyph::Egrave),
    Some(Glyph::Iacute),
    Some(Glyph::Icircumflex),
    Some(Glyph::Idieresis),
    Some(Glyph::Igrave),
    Some(Glyph::Oacute),
    Some(Glyph::Ocircumflex),
    Some(Glyph::apple),
    Some(Glyph::Ograve),
    Some(Glyph::Uacute),
    Some(Glyph::Ucircumflex),
    Some(Glyph::Ugrave),
    Some(Glyph::dotlessi),
    Some(Glyph::circumflex),
    Some(Glyph::tilde),
    Some(Glyph::macron),
    Some(Glyph::breve),
    Some(Glyph::dotaccent),
    Some(Glyph::ring),
    Some(Glyph::cedilla),
    Some(Glyph::hungarumlaut),
    Some(Glyph::ogonek),
    Some(Glyph::caron),
];

#[cfg(test)]
mod tests {
    use rstest::rstest;

    use super::*;

    #[rstest]
    #[case(0o101, Glyph::A)]
    #[case(0o256, Glyph::AE)]
    #[case(0o361, Glyph::Ograve)]
    #[case(0o122, Glyph::R)]
    #[case(0o141, Glyph::a)]
    fn test_code_to_char(#[case] code: u8, #[case] expected: u16) {
        assert_eq!(MacRomanEncoding.decode(code), expected);
    }
}
