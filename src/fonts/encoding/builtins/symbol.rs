use crate::fonts::encoding::{CharacterSet, Decode, Glyph};

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub struct SymbolEncoding;

impl Decode for SymbolEncoding {
    fn decode(&self, code: u8) -> u16 {
        SYMBOL_ENCODING[code as usize].expect("character should be in the character set.")
    }

    fn character_set(self) -> Vec<Option<u16>> {
        SYMBOL_ENCODING.to_vec()
    }
}

#[allow(dead_code)]
pub const SYMBOL_ENCODING: CharacterSet = [
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    Some(Glyph::space),
    Some(Glyph::exclam),
    Some(Glyph::universal),
    Some(Glyph::numbersign),
    Some(Glyph::existential),
    Some(Glyph::percent),
    Some(Glyph::ampersand),
    Some(Glyph::suchthat),
    Some(Glyph::parenleft),
    Some(Glyph::parenright),
    Some(Glyph::asteriskmath),
    Some(Glyph::plus),
    Some(Glyph::comma),
    Some(Glyph::minus),
    Some(Glyph::period),
    Some(Glyph::slash),
    Some(Glyph::zero),
    Some(Glyph::one),
    Some(Glyph::two),
    Some(Glyph::three),
    Some(Glyph::four),
    Some(Glyph::five),
    Some(Glyph::six),
    Some(Glyph::seven),
    Some(Glyph::eight),
    Some(Glyph::nine),
    Some(Glyph::colon),
    Some(Glyph::semicolon),
    Some(Glyph::less),
    Some(Glyph::equal),
    Some(Glyph::greater),
    Some(Glyph::question),
    Some(Glyph::congruent),
    Some(Glyph::Alpha),
    Some(Glyph::Beta),
    Some(Glyph::Chi),
    Some(Glyph::Delta),
    Some(Glyph::Epsilon),
    Some(Glyph::Phi),
    Some(Glyph::Gamma),
    Some(Glyph::Eta),
    Some(Glyph::Iota),
    Some(Glyph::theta1),
    Some(Glyph::Kappa),
    Some(Glyph::Lambda),
    Some(Glyph::Mu),
    Some(Glyph::Nu),
    Some(Glyph::Omicron),
    Some(Glyph::Pi),
    Some(Glyph::Theta),
    Some(Glyph::Rho),
    Some(Glyph::Sigma),
    Some(Glyph::Tau),
    Some(Glyph::Upsilon),
    Some(Glyph::sigma1),
    Some(Glyph::Omega),
    Some(Glyph::Xi),
    Some(Glyph::Psi),
    Some(Glyph::Zeta),
    Some(Glyph::bracketleft),
    Some(Glyph::therefore),
    Some(Glyph::bracketright),
    Some(Glyph::perpendicular),
    Some(Glyph::underscore),
    Some(Glyph::radicalex),
    Some(Glyph::alpha),
    Some(Glyph::beta),
    Some(Glyph::chi),
    Some(Glyph::delta),
    Some(Glyph::epsilon),
    Some(Glyph::phi),
    Some(Glyph::gamma),
    Some(Glyph::eta),
    Some(Glyph::iota),
    Some(Glyph::phi2),
    Some(Glyph::kappa),
    Some(Glyph::lambda),
    Some(Glyph::mu),
    Some(Glyph::nu),
    Some(Glyph::omicron),
    Some(Glyph::pi),
    Some(Glyph::theta),
    Some(Glyph::rho),
    Some(Glyph::sigma),
    Some(Glyph::tau),
    Some(Glyph::upsilon),
    Some(Glyph::omega1),
    Some(Glyph::omega),
    Some(Glyph::xi),
    Some(Glyph::psi),
    Some(Glyph::zeta),
    Some(Glyph::braceleft),
    Some(Glyph::bar),
    Some(Glyph::braceright),
    Some(Glyph::similar),
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    Some(Glyph::Upsilon1),
    Some(Glyph::minute),
    Some(Glyph::lessequal),
    Some(Glyph::fraction),
    Some(Glyph::infinity),
    Some(Glyph::florin),
    Some(Glyph::club),
    Some(Glyph::diamond),
    Some(Glyph::heart),
    Some(Glyph::spade),
    Some(Glyph::arrowboth),
    Some(Glyph::arrowleft),
    Some(Glyph::arrowup),
    Some(Glyph::arrowright),
    Some(Glyph::arrowdown),
    Some(Glyph::degree),
    Some(Glyph::plusminus),
    Some(Glyph::second),
    Some(Glyph::greaterequal),
    Some(Glyph::multiply),
    Some(Glyph::proportional),
    Some(Glyph::partialdiff),
    Some(Glyph::bullet),
    Some(Glyph::divide),
    Some(Glyph::notequal),
    Some(Glyph::equivalence),
    Some(Glyph::approxequal),
    Some(Glyph::ellipsis),
    Some(Glyph::arrowvertex),
    Some(Glyph::arrowhorizex),
    Some(Glyph::carriagereturn),
    Some(Glyph::aleph),
    Some(Glyph::Ifraktur),
    Some(Glyph::Rfraktur),
    Some(Glyph::weierstrass),
    Some(Glyph::circlemultiply),
    Some(Glyph::circleplus),
    Some(Glyph::emptyset),
    Some(Glyph::intersection),
    Some(Glyph::union),
    Some(Glyph::propersuperset),
    Some(Glyph::reflexsuperset),
    Some(Glyph::notsubset),
    Some(Glyph::propersubset),
    Some(Glyph::reflexsubset),
    Some(Glyph::element),
    Some(Glyph::notelement),
    Some(Glyph::angle),
    Some(Glyph::gradient),
    Some(Glyph::registerserif),
    Some(Glyph::copyrightserif),
    Some(Glyph::trademarkserif),
    Some(Glyph::product),
    Some(Glyph::radical),
    Some(Glyph::dotmath),
    Some(Glyph::logicalnot),
    Some(Glyph::logicaland),
    Some(Glyph::logicalor),
    Some(Glyph::arrowdblboth),
    Some(Glyph::arrowdblleft),
    Some(Glyph::arrowdblup),
    Some(Glyph::arrowdblright),
    Some(Glyph::arrowdbldown),
    Some(Glyph::lozenge),
    Some(Glyph::angleleft),
    Some(Glyph::registersans),
    Some(Glyph::copyrightsans),
    Some(Glyph::trademarksans),
    Some(Glyph::summation),
    Some(Glyph::parenlefttp),
    Some(Glyph::parenleftex),
    Some(Glyph::parenleftbt),
    Some(Glyph::bracketlefttp),
    Some(Glyph::bracketleftex),
    Some(Glyph::bracketleftbt),
    Some(Glyph::bracelefttp),
    Some(Glyph::braceleftmid),
    Some(Glyph::braceleftbt),
    Some(Glyph::braceex),
    None,
    Some(Glyph::angleright),
    Some(Glyph::integral),
    Some(Glyph::integraltp),
    Some(Glyph::integralex),
    Some(Glyph::integralbt),
    Some(Glyph::parenrighttp),
    Some(Glyph::parenrightex),
    Some(Glyph::parenrightbt),
    Some(Glyph::bracketrighttp),
    Some(Glyph::bracketrightex),
    Some(Glyph::bracketrightbt),
    Some(Glyph::bracerighttp),
    Some(Glyph::bracerightmid),
    Some(Glyph::bracerightbt),
    None,
];
